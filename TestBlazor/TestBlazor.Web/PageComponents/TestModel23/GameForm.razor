<EditForm Model="Game" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    
    <div class="form-group">
        <label>Name:</label>
        <div>
            <InputText class="form-control" @bind-Value="Game.Name"/>
            <ValidationMessage For="(() => Game.Name)"/> 
        </div>
    </div>
    <div class="form-group">
        <label>GamePlay Video:</label>
        <div>
            <InputText class="form-control" @bind-Value="Game.GamePlayVideo"/>
            <ValidationMessage For="(() => Game.GamePlayVideo)"/> 
        </div>
    </div>
    <div class="form-group">
        <label>Release Date:</label>
        <div>
            <InputDate class="form-control" @bind-Value="Game.ReleaseDate"/>
            <ValidationMessage For="(() => Game.ReleaseDate)"/> 
        </div>
    </div>
    <div class="form-group">
        <InputImage
            Label="Image" 
            OnImageFileSelected="ImageFileSelectedHandler" 
            ImageUrl="@_imageUrl"/>
    </div>
    <div class="form-check">
        <InputCheckbox @bind-Value="Game.InSale" class="form-check-input" id="gridCheck1"/>
        <label for="gridCheck1" class="form-check-label">InSale?</label>
    </div>
    <div class="form-group form-markdown">
        <MarkdownInput 
            @bind-Value="Game.Description" 
            Label="Description" 
            OnFor="() => Game.Description" />
    </div>
    
    <div class="form-group">
        <label>Game Genres</label>
        <MultipleSelector OnSelected="Selected" OnNotSelected="NotSelected"/>
    </div>

    <button type="submit" class="btn btn-primary mb-2">Save Changes</button>

</EditForm>

@code {
    [Parameter] public GameImage Game { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    [Parameter] public List<GenreImage> SelectedGenres { get; set; } = new();
    [Parameter] public List<GenreImage> NotSelectedGenres { get; set; } = new();

    [Parameter] public List<MultipleSelectorHelper> Selected { get; set; } = new();
    [Parameter] public List<MultipleSelectorHelper> NotSelected { get; set; } = new();

    string _imageUrl;

    protected override void OnInitialized()
    {
        Selected = SelectedGenres.Select(b => new MultipleSelectorHelper(b.Id.ToString(), b.Name)).ToList();
        NotSelected = NotSelectedGenres.Select(b => new MultipleSelectorHelper(b.Id.ToString(), b.Name)).ToList();

        if (Game.ReleaseDate is null)
        {
            Game.ReleaseDate = DateTime.Now;
        }

        if (!string.IsNullOrWhiteSpace(Game.Image))
        {
            _imageUrl = Game.Image;
            Game.Image = null;
        }
    }

    void ImageFileSelectedHandler(string imageBase64)
    {
        Game.Image = imageBase64;
        _imageUrl = null;
    }
}
